@{
    ViewData["Title"] = "Home Page";
}



<div class="row">
    <div class="col-12 text-center">
        <button id="btnOpenCamera" class="btn btn-info mx-auto" data-state="closed">Open camera</button>
    </div>
    <div class="col-6">
        <div class="card card-body bg-light m-2 h-100">
            <div><p id="lblState">Pronto para conectar</p></div>


            <div class="d-lg-flex flex-column flex-row ">

                <div class="p-2 w-100">
                    <input id="server" type="text" class="w-100" />
                </div>
                <div class="d-flex flex-row">
                    <div class="m-2">
                        <button id="btnConnect" type="submit" class="btn btn-info">Abrir Socket</button>
                    </div>
                    <div class="m-2">
                        <button id="btnClose" class="btn btn-danger" disabled>Fechar Socket</button>
                    </div>
                </div>
            </div>

        </div>
    </div>
    <div class="col-6">
        <div class="card card-body bg-light m-2 h-100">
            <div class="d-flex">Seu Id:&nbsp;<p id="IdUser"></p></div>
            <ul id="usersdata" class="list-group">
                <li class="list-group-item">Usuarios Online</li>
                <li class="list-group-item user" data-cid="" data-username="">
                    <a href="#">
                        <div class="username"></div>
                    </a>
                </li>
            </ul>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-4 m-2">
        <div class="d-lg-flex flex-row">
            <div class="col-5">
                <h4>Você</h4>
                <video id="video" autoplay></video>
            </div>
            <div class="col-2"></div>
            <div class="col-5">
                <h4>Ligação Recebida</h4>
                <img id="img" src="">
            </div>
        </div>

    </div>
    <div class="col-2"></div>
    <div class="col-4 m-2">
        <h4>Ligador </h4>
        <img id="imgHub" src="">
    </div>
</div>
<div class="modal fade" id="callmodal" tabindex="-1" role="dialog" aria-labelledby="callmodaltitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="callmodaltitle">Hello</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="declineCall()" data-dismiss="modal">Decline</button>
                <button type="button" class="btn btn-primary" onclick="acceptCall()">Accept</button>
            </div>
        </div>
    </div>
</div>


@section Scripts
{
   
<script>
        'use strict';

        var video = document.getElementById('video');
        var server = document.getElementById("server");
        var btnConnect = document.getElementById("btnConnect");
        var btnOpenCamera = document.getElementById("btnOpenCamera");
        var btnClose = document.getElementById("btnClose");
        var lblState = document.getElementById("lblState");
        var img = document.getElementById('img');

        var socket;
        var scheme = document.location.protocol === "https:" ? "wss" : "ws";
        var port = document.location.port ? (":" + document.location.port) : "";

        var hubUrl = document.location.origin + '/cnnctn';
        var hubConnection = new signalR.HubConnectionBuilder()
            .withUrl(hubUrl, signalR.HttpTransportType.WebSockets)
            .configureLogging(signalR.LogLevel.None)
            .build();

        var subject = new signalR.Subject();
        var acceptinguser = "";
        var users = [];
        var user = null;
        var caller = null;


        $(document).ready(function () {

            server.value = scheme + "://" + document.location.hostname + port + "/ws";

            hubConnection.start().then(() => {
                user = generateId();
                userJoin(user);
                console.info(`Connected as id user: ${user}`);

            }).catch(err => console.error(err));


            hubConnection.on('updateOnlineUsers', (userList) => {
                console.info('Check online users...' + JSON.stringify(userList));
                users = userList;

                $('#usersdata li.user').remove();
               
        
        })





</script>
 <script src="~/js/funcoeshub.js"></script>

}